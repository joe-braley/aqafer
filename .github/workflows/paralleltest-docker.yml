name: Run AQAvit Paralleltest docker

on:
  workflow_dispatch: # Allows the job to be manually triggered
    inputs:
      customizedSdkUrl:
         description: SDK URL
         required: true
      testImage:
        description: Native Libs URL
        required: true
      aqatest-repo:
        description: adoptium/aqa-tests repository
        required: true
        type: string
        default: 'adoptium/aqa-tests:v0.9.6-release'
      containerregistry:
        description: registry
        required: true
        default: funregistry.azurecr.io

jobs:
  setup-parallel-docker:
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.containerregistry }}
      env:
        USE_TESTENV_PROPERTIES: true
      options: --cpus 2
      credentials:
        username: ${{ secrets.ACR_TOKEN_NAME }}
        password: ${{ secrets.AZURE_ACR_TOKEN_PASS1 }}
    strategy:
      fail-fast: true
      matrix:
        suite: [functional]
    steps:
      - name: install deps
        run: |
          apt update
          apt install -y curl
        
      - name: Setup ANT_HOME
        working-directory: ${{ github.workspace }}
        shell: bash
        run: |
          curl -OLJKSks https://dlcdn.apache.org//ant/binaries/apache-ant-1.9.16-bin.tar.gz
          curl -o ant-contrib.tar.gz -LJSks https://sourceforge.net/projects/ant-contrib/files/ant-contrib/ant-contrib-1.0b2/ant-contrib-1.0b2-bin.tar.gz/download
          tar xvf ant-contrib.tar.gz
          tar xvf apache-ant-1.9.16-bin.tar.gz
          mv ant-contrib/lib/ant-contrib.jar apache-ant-1.9.16/lib/
          echo "ANT_HOME=${{ github.workspace }}/apache-ant-1.9.16" >> $GITHUB_ENV
          echo "$ANT_HOME/bin" >> $GITHUB_PATH
          echo $PATH

      - name: echo env
        run: |
          echo $ANT_HOME
          echo $PATH
          ant

      - name: run ant
        run: |
          ant
  #     - uses: adoptium/run-aqa@v2.0.1
  #       with:
  #         jdksource: 'customized'
  #         customizedSdkUrl: ${{ inputs.customizedSdkUrl }}
  #         aqa-testsRepo: ${{ inputs.aqatest-repo }}
  #         build_list: ${{ matrix.suite }}
  #         target: ${{ matrix.suite }} # parallellist to generate
  #         run_parallel: true
  #         num_machines: 4

  #     - name: Archive parallelList - ${{ matrix.suite }}
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: ${{ matrix.suite }}-parallelList.mk
  #         path: ${{ github.workspace }}/aqa-tests/TKG/parallelList.mk

  # run-aqa-parallel-docker:
  #   runs-on: ubuntu-latest
  #   needs: setup-parallel-docker
  #   container:
  #     image: ${{ secrets.CONTAINER_REGISTRY }}
  #     env:
  #       USE_TESTENV_PROPERTIES: true
  #     options: --cpus 2
  #     credentials:
  #       username: ${{ secrets.ACR_TOKEN_NAME }}
  #       password: ${{ secrets.AZURE_ACR_TOKEN_PASS1 }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       test_list: ['testList_0', 'testList_1', 'testList_2', 'testList_3'] # numlist is hardcoded...for now
  #       suite: [functional, openjdk, system, perf]
  #   steps:

  #     - name: Download parallelList - ${{ matrix.suite }}
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: ${{ matrix.suite }}-parallelList.mk
  #         path: ./

  #     - name: Run AQA Docker Paralleltest ${{ matrix.suite }}_${{ matrix.test_list }}
  #       uses: adoptium/run-aqa@v2.0.1
  #       with:
  #         jdksource: 'customized'
  #         customizedSdkUrl: ${{ inputs.customizedSdkUrl }}
  #         aqa-testsRepo: ${{ inputs.aqatest-repo }}
  #         build_list: ${{ matrix.suite }}
  #         target : -f parallelList.mk ${{ matrix.test_list }}

  #     - uses: actions/upload-artifact@v2
  #       if: always() # Always run this step (even if the tests failed)
  #       with:
  #         name: test_output_${{ matrix.suite }}_${{ matrix.test_list }}
  #         path: ./**/output_*/*.tap
